# Group User
Users! This is an Admin-Only endpoint except for PATCH to yourself.

`is_admin` specifies if the user is a global admin.

`demandAccounts` are the demandAccounts this user is linked to.

## Users Collection [/users?include=includes&limit=limit]
+ Parameters
    + limit (optional, number, `1`) ... Numerical `limit` to apply to how many records are returned.
    + includes (optional, string, `'modifier'`) ... `includes` The relations that you want returned as part of the object. Options are: `modifier`, `demandAccounts`, or `all`

### Retrieve all Users [GET]
+ Response 200 (application/json)

    + Body
            [
                { 
                data : {
                    username: "vungle"
                    first_name: "I'm a"
                    last_name: "Computer"
                    modified_by: null
                    created_at: "2014-03-12T16:29:48+00:00"
                    demandAccounts: { }
                    updated_at: "2014-03-12T16:29:48+00:00"
                    class: "User"
                    version: 1
                    is_admin: true
                    modifier: null
                    id: 1
                    }
                },
                {
                 data : {
                    username: "potatoes"
                    first_name: "I'm a"
                    last_name: "potato"
                    modified_by: null
                    created_at: "2014-03-12T16:29:48+00:00"
                    demandAccounts: { }
                    updated_at: "2014-03-12T16:29:48+00:00"
                    class: "User"
                    version: 1
                    is_admin: False
                    modifier: null
                    id: 2
                    }
                }
            ]
            


## Users Create [/users]
### Create a User [POST]
+ Request (application/json)

    
        {
            username: "vungle"
            first_name: "I'm a"
            last_name: "Computer"
            is_admin: true
            password: "my password"

        }

        

+ Response 200 (application/json)

        { 
          data: {
              username: "vungle"
              first_name: "I'm a"
              last_name: "Computer"
              modified_by: null
              created_at: "2014-03-12T15:48:36+00:00"
              updated_at: "2014-03-12T15:48:36+00:00"
              class: "User"
              version: 1
              is_admin: true
              id: 4
          }
        }

## User [/users/id?include=includes]
Get a single User object 
+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Note to perform action with. Has example value.
    + includes (optional, string, `'modifier'`) ... `includes` The relations that you want returned as part of the object. Options are: `modifier`, `demandAccounts`, `demandAccounts_proxy`, or `all`

### Retrieve a User [GET]
+ Response 200 (application/json)

    + Body

            {
                data: {
                  username: "vungle"
                  first_name: "I'm a"
                  last_name: "Computer"
                  modified_by: null
                  created_at: "2014-03-12T16:29:48+00:00"
                  demandAccounts: { }
                  updated_at: "2014-03-12T16:29:48+00:00"
                  class: "User"
                  version: 1
                  is_admin: true
                  demandAccounts_proxy: { }
                  modifier: null
                  id: 1
                }
            }
            
### Update A User [PATCH]

+ Request (application/json)

        {
            first_name: "No Longer A"
        }
+ Response 200 (application/json)

        {
            data : {
              username: "vungle"
              first_name: "No Longer A"
              last_name: "Computer"
              modified_by: 1
              created_at: "2014-03-12T16:29:48+00:00"
              updated_at: "2014-03-12T16:33:48+00:00"
              class: "User"
              version: 2
              is_admin: true
              id: 1
            }
        }   

##  Delete a User [/users/id]
### Remove a User [DELETE]
+ Response 200




